//
//  DetailPlaceInteractor.swift
//  GoodPlaces
//
//  Created by Lucas  N Santana on 02/12/20.
//  Copyright (c) 2020 Lucas  N Santana. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol DetailPlaceBusinessLogic {
    func getDetail()
    func openWebsite()
    func callPhone()
}

protocol DetailPlaceDataStore {
    var place: Place? { get set }
}

class DetailPlaceInteractor: DetailPlaceBusinessLogic, DetailPlaceDataStore {
    var place: Place?
    
    var presenter: DetailPlacePresentationLogic?
    var worker: DetailPlaceWorker?
    
    
    // MARK: DetailPlaceBusinessLogic
    
    func getDetail() {
        guard let place = place else { return }
        presenter?.presentLoading()
        worker = DetailPlaceWorker()
        worker?.getDetailWith(place: place, completion: { (result) in
            self.presenter?.hideLoading()
            switch result {
            case .success(let place):
                self.fillMyPlace(withPlace: place)
                self.presenter?.presentDetail(response: DetailPlace.Detail.Response(place: self.place))
            case .failure(let error):
                self.presenter?.presentError(error: error)
            }
        })
    }
    func openWebsite() {
        guard let place = place, let webSite = place.website,
            let websiteUrl = URL(string: webSite) else {
                self.presenter?.displayAlert(message: "This place have not website.")
                return
        }
        open(url: websiteUrl)
    }
    func callPhone(){
        guard let phoneNumber = place?.phoneNumber?.replacingOccurrences( of:"[^0-9]", with: "", options: .regularExpression),
            let url = URL(string: "tel://\(phoneNumber)") else {
                self.presenter?.displayAlert(message: "You can not call to this place.")
                return
        }
        open(url: url)
    }
    
    private func fillMyPlace(withPlace: Place) {
        self.place?.opening?.weekdayText = withPlace.opening?.weekdayText
        self.place?.phoneNumber = withPlace.phoneNumber
        self.place?.reviews = withPlace.reviews
        self.place?.website = withPlace.website
    }
    private func open(url:URL){
        if UIApplication.shared.canOpenURL(url) {
            UIApplication.shared.open(url, options: [:], completionHandler: nil)
        }
    }
}
